<!-- video player -->
<div class="embed-player">
  <div id="large-player"></div>
  <div id="miniature-player"></div>
</div>


<!-- carrousel of the playlist -->

<!-- average rating + nb of comments -->

<!-- quizz -->

<!-- floating player -->

<!-- RECOMMENDATIONS -->

<div class="container">
  <h2>You may also like:</h2>
  <div class="row">
    <% @recommended_skits.each do |skit| %>
      <div class="col-xs-12 col-md-4">
        <%= render 'pages/shared/card', skit: skit %>
      </div>
    <% end %>
  </div>
</div>

<!-- REVIEWS -->

<!-- script pour player youtube -->
<% content_for(:after_js) do %>
  <%= javascript_tag do %>
    // 2. This code loads the IFrame Player API code asynchronously.
    var tag = document.createElement('script');
    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);


    // 3. This function creates an <iframe> (and YouTube player)
    //    after the API code downloads.
    var largePlayer;
    var miniaturePlayer;
    function onYouTubeIframeAPIReady() {
      largePlayer = new YT.Player('large-player', {
        height: '480',
        width: '850',
        videoId: '<%= j @skit.youtube_path %>',
        playerVars: {
          'autoplay': 1,
          'rel': 0,
          'showinfo': 0
        },
        events: {
          'onReady': onLargePlayerReady
        }
      });
      miniaturePlayer = new YT.Player('miniature-player', {
        height: '200',
        width: '200',
        videoId: '<%= j @skit.youtube_path %>',
        playerVars: {
          'autoplay': 1,
          'rel': 0,
          'showinfo': 0
        },
        events: {
          'onReady': onMiniaturePlayerReady
        }
      });
    }

    // 4. The API will call this function when the video player is ready.
    function onLargePlayerReady(event) {
      event.target.playVideo();
    }
    function onMiniaturePlayerReady(event) {
      event.target.mute();
      event.target.playVideo();
    }

    // 5. The API calls this function when the player's state changes.
  <% end %>
<% end %>
